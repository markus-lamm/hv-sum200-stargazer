@page "/collection/moveimage/{Id}"

@using Hv.Sum200.Stargazer.Model
@using Hv.Sum200.Stargazer.Data
@using CommunityToolkit.Maui.Alerts;
@using CommunityToolkit.Maui.Core;

@inject DbService db

<div>
    <div class="title-bar-container">
        <img class="title-bar-img" src="Images/move.svg" alt="Image" />
        <div class="title-bar-text">Move Image</div>
    </div>
    <div class="list-title">
        @if (_image != null)
        {
            <div class="title-bar-title">
                <h3 class="title-bar-title-text">@_image.Title</h3>
            </div>
        }
    </div>
    @if (_listCount != 0)
    {
        <div class="list-options-container">
            <h3>Select a list for the image</h3>
            <form @onsubmit="AssignImageToCollection">
                <div class="list-options-items-container">
                    @foreach (var list in _collectionLists)
                    {
                        <div class="list-options-items">
                            <label>
                                <input type="radio" name="selectedListId" value="@list.Id" @onchange="((ChangeEventArgs __e) => UpdateSelectedListId(__e.Value.ToString()))" />
                                @list.Title
                            </label>
                        </div>
                    }
                </div>
                <div class="move-btn-container">
                    <button class="move-btn" type="submit">
                        <img class="move-btn-img" src="Images/move.svg" alt="Icon" />
                        <div class="move-btn-text">Save</div>
                    </button>
                </div>
            </form>
        </div>
    }
    else
    {
        <div class="loading">
            <em>Your have no lists</em>
        </div>
    }
    <a href="collection">
        <div class="return">
            <img class="return-img" src="Images/return.svg" alt="Return" />
        </div>
    </a>
</div>

@code {
    [Parameter]
    public string id { get; set; }
    private ApodImage _image;
    private List<CollectionList> _collectionLists;
    private string _selectedListId;
    private int _listCount;

    protected override async Task OnInitializedAsync()
    {
        _image = await db.GetImageById(id);
        _collectionLists = await db.GetCollectionLists();
        _listCount = _collectionLists.Count();
    }

    //Update the selectedListId variable when the user selects a list
    private void UpdateSelectedListId(string listId)
    {
        _selectedListId = listId;
    }

    private async Task AssignImageToCollection()
    {
        if (string.IsNullOrEmpty(_selectedListId))
        {
            var toast = Toast.Make("Please select a list to assign the image to", ToastDuration.Short, 14);
            await toast.Show();
        }
        else
        {
            bool success = await db.ChangeImageCollection(_image.Id, _selectedListId);

            if (success)
            {
                var toast = Toast.Make("Image moved", ToastDuration.Short, 14);
                await toast.Show();
            }
            else{
                var toast = Toast.Make("Image could not be moved", ToastDuration.Short, 14);
                await toast.Show();
            }
        }
    }
}
