@page "/collection/editlist/{Id}"

@using sum200_project_stargazer.Model
@using sum200_project_stargazer.Data
@using CommunityToolkit.Maui.Alerts;
@using CommunityToolkit.Maui.Core;

@inject DbService db

<div>
    <div class="title-bar-container">
        <img class="title-bar-img" src="Images/edit.svg" alt="Image" />
        <div class="title-bar-text">Edit List</div>
    </div>
    <div class="list-management-container">
        <form @onsubmit="EditExistingList()">
            <input class="list-management-input" type="text" placeholder="List Name" @bind="_listName" />
            <div class="edit-btn-container">
                <button class="edit-btn" type="submit">
                    <img class="edit-btn-img" src="Images/edit.svg" alt="Icon" />
                    <div class="edit-btn-text">Save</div>
                </button>
            </div>
        </form>
    </div>
    <div class="list-name-suggestions">
        <h3>Need some inspiration?</h3>
        <div class="list-name-suggestions-ex">
            <div>
                <strong>Stars</strong>
            </div>
            <div>
                For the glowing astronomical objects
            </div>
        </div>
        <div class="list-name-suggestions-ex">
            <div>
                <strong>Nebulae</strong>
            </div>
            <div>
                For the vast areas of colorful space
            </div>
        </div>
        <div class="list-name-suggestions-ex">
            <div>
                <strong>SuperClusters</strong>
            </div>
            <div>
                For the immense gatherings of all things known
            </div>
        </div>
    </div>
    <a href="collection">
        <div class="return">
            <img class="return-img" src="Images/return.svg" alt="Return" />
        </div>
    </a>
</div>

@code {
    [Parameter]
    public string id { get; set; }
    private CollectionList _collectionList;
    private string _listName;

    protected override async Task OnInitializedAsync()
    {
        _collectionList = await db.GetCollectionListById(id);
        _listName = _collectionList.Title;
    }

    private EventCallback EditExistingList()
    {
        return EventCallback.Factory.Create(this, async () =>
        {
            bool success = await db.EditCollectionList(id, _listName);

            if (success)
            {
                var toast = Toast.Make("List edited", ToastDuration.Short, 14);
                await toast.Show();
            }
            else
            {
                var toast = Toast.Make("List could not be edited", ToastDuration.Short, 14);
                await toast.Show();
            }
        });
    }
}
